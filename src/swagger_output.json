{
  "swagger": "2.0",
  "info": {
    "title": "Cinego RestAPI Project",
    "description": "Implementation of Swagger with TypeScript for Cinego backend REST APIs",
    "version": "1.0.0",
    "contact": {
      "name": "CineGo",
      "url": "http://cinego.live",
      "email": "chijay59@gmail.com"
    }
  },
  "host": "localhost:3000",
  "schemes": ["http"],
  "paths": {
    "/signup": {
      "post": {
        "summary": "Sign Up",
        "description": "Create a new user",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "firstName": { "type": "string", "example": "John" },
                "lastName": { "type": "string", "example": "Doe" },
                "email": { "type": "string", "example": "john.doe@example.com" },
                "password": { "type": "string", "example": "Password_123" },
                "role": { "type": "string", "example": "user" },
                "country": { "type": "string", "example": "Nigeria" },
                "referalCode": { "type": "string", "example": "123789" },
                "selectedPlanName": { "type": "string", "example": "Basic" }
              },
              "required": ["firstName", "lastName", "email", "password", "role", "country", "selectedPlanName"]
            }
          }
        ],
        "responses": {
          "201": {
            "description": "User created successfully",
            "schema": {
              "type": "object",
              "properties": {
                "message": { "type": "string", "example": "User created successfully" },
                "token": { "type": "string", "example": "JWT token" },
                "userDataResponse": {
                  "type": "object",
                  "properties": {
                    "id": { "type": "number", "example": 1 },
                    "firstName": { "type": "string", "example": "John" },
                    "lastName": { "type": "string", "example": "Doe" },
                    "email": { "type": "string", "example": "john.doe@example.com" },
                    "role": { "type": "string", "example": "user" },
                    "country": { "type": "string", "example": "US" }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input data"
          },
          "500": {
            "description": "Failed to create user"
          }
        }
      }
    },
    "/signin": {
      "post": {
        "summary": "Sign In",
        "description": "Authenticate a user",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "email": { "type": "string", "example": "john.doe@example.com" },
                "password": { "type": "string", "example": "Password_123" }
              },
              "required": ["email", "password"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Login successful",
            "schema": {
              "type": "object",
              "properties": {
                "message": { "type": "string", "example": "Login successful" },
                "userDataResponse": {
                  "type": "object",
                  "properties": {
                    "id": { "type": "number", "example": 1 },
                    "firstName": { "type": "string", "example": "John" },
                    "lastName": { "type": "string", "example": "Doe" },
                    "email": { "type": "string", "example": "john.doe@example.com" },
                    "role": { "type": "string", "example": "user" },
                    "country": { "type": "string", "example": "US" }
                  }
                },
                "token": { "type": "string", "example": "JWT token" }
              }
            }
          },
          "400": {
            "description": "Invalid credentials"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/profile": {
      "get": {
        "summary": "Get User Profile",
        "description": "Get user profile information",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "id": { "type": "number", "example": 1 },
                "firstName": { "type": "string", "example": "John" },
                "lastName": { "type": "string", "example": "Doe" },
                "email": { "type": "string", "example": "john.doe@example.com" },
                "role": { "type": "string", "example": "user" },
                "country": { "type": "string", "example": "US" }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/users": {
      "get": {
        "summary": "Get All Users",
        "description": "Get a list of all users",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": { "type": "number", "example": 1 },
                  "firstName": { "type": "string", "example": "John" },
                  "lastName": { "type": "string", "example": "Doe" },
                  "email": { "type": "string", "example": "john.doe@example.com" },
                  "role": { "type": "string", "example": "user" },
                  "country": { "type": "string", "example": "US" }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/users/{ids}": {
      "put": {
        "summary": "Update User",
        "description": "Update user information",
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "firstName": { "type": "string", "example": "John" },
                "lastName": { "type": "string", "example": "Doe" },
                "email": { "type": "string", "example": "john.doe@example.com" },
                "country": { "type": "string", "example": "US" }
              },
              "required": ["firstName", "lastName", "email", "country"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "delete": {
        "summary": "Delete User",
        "description": "Delete user",
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/": {
      "get": {
        "summary": "Home",
        "description": "Home route",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "message": { "type": "string", "example": "Hello World!" }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    }
  },
  "securityDefinitions": {
    "Bearer": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  },
  "security": [
    {
      "Bearer": []
    }
  ]
}
